% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filters.R
\name{filter2D}
\alias{filter2D}
\title{Image Convolution with Kernel}
\usage{
filter2D(image, kernel, in_place = FALSE)
}
\arguments{
\item{image}{An \code{\link{Image}} object.}

\item{kernel}{A matrix representing the convolution kernel.}

\item{in_place}{A logical indicating whether the change should be applied to
the image itself (TRUE, faster but destructive) or to a copy of it (FALSE,
the default, slower but non destructive).}
}
\value{
An \code{\link{Image}} object if \code{in_place=FALSE}. Otherwise, it
 returns nothing and modifies \code{image} in place.
}
\description{
\code{filter2D} applies an arbitrary linear filter to an image.
}
\note{
For color images, the same kernel is applied to each channel of the
 image. If you want to apply different kernels to each channel, first split
 the image into separate channels with the \code{\link{split}} and process
 them individually before merging them using the \code{\link{merge}} function.
}
\examples{
balloon <- image(system.file("sample_img/balloon1.png", package = "Rvision"))
k_edge_detection <- matrix(c(-1, -1, -1, -1, 8, -1, -1, -1, -1), nrow = 3)
balloon_edge <- filter2D(balloon, k_edge_detection)
plot(balloon_edge)

}
\seealso{
\code{\link{Image}}, \code{\link{split}}, \code{\link{merge}}
}
\author{
Simon Garnier, \email{garnier@njit.edu}
}
